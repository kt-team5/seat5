 server:
   port: 8080
 ---  
 spring:
   profiles: default
 #  jpa:
 #    hibernate:
 #      naming:
 #        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
 #      ddl-auto: update
 #    properties:
 #      hibernate:
 #        show_sql: true
 #        format_sql: true
 #        dialect: org.hibernate.dialect.MySQL57Dialect
 #  datasource:
 #    url: jdbc:mysql://localhost:3306/mysql?serverTimezone=Asia/Seoul
 #    username: root
 #    password: root12345
 #    driverClassName: com.mysql.cj.jdbc.Driver
 #  datasource:
 #    url: jdbc:mysql://${_DATASOURCE_ADDRESS:104.154.156.17:3306}/${_DATASOURCE_TABLESPACE:my-database}
 #    username: ${_DATASOURCE_USERNAME:my-user}
 #    password: ${_DATASOURCE_PASSWORD:my-password}
 #    driverClassName: com.mysql.cj.jdbc.Driver
   cloud:
     stream:
       kafka:
         binder:
           brokers: localhost:9092
       bindings:
         input:
           group: seats
           destination: pcroom
           contentType: application/json
         output:
           destination: pcroom
           contentType: application/json


 ---
 spring:
   profiles: docker
 #  sleuth:
 #    sampler:
 #      probability: 1
 #    web:
 #      skipPattern: (^cleanup.*|.+favicon.*)
   cloud:
     stream:
       kafka:
         binder:
           brokers: my-kafka.kafka.svc.cluster.local:9092
         streams:
           binder:
             configuration:
               default:
                 key:
                   serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                 value:
                   serde: org.apache.kafka.common.serialization.Serdes$StringSerde
       bindings:
         input:
           group: seats
           destination: pcroom
           contentType: application/json
         output:
           destination: pcroom
           contentType: application/json

 api:
   url:
     gateway5: http://gateway5:8080
     order5: http://order5:8080
     seat5: http://seat5:8080
     payment5: http://payment5:8080
